"use strict";angular.module("myApp",["ionic","ui.router","ngResource","restangular","myApp.filters","myApp.services","myApp.directives","myApp.controllers"]).config(["$stateProvider","$urlRouterProvider","RestangularProvider",function($stateProvider,$urlRouterProvider,RestangularProvider){$urlRouterProvider.otherwise("/menu/home"),$stateProvider.state("menu",{url:"/menu","abstract":!0,templateUrl:"partials/menuM.html"}),$stateProvider.state("menu.home",{url:"/home",views:{menuContent:{templateUrl:"partials/loginM.html",controller:"LoginController"}},accessLevel:"free1"}),$stateProvider.state("menu.login",{url:"/login",views:{menuContent:{templateUrl:"partials/loginM.html",controller:"LoginController"}},accessLogged:!1}),$stateProvider.state("menu.report",{url:"/report",views:{menuContent:{templateUrl:"partials/reportM.html",controller:"ReportCtrlMobile"}},accessLogged:!0,configAction:"new"}),$stateProvider.state("menu.list",{url:"/list",views:{menuContent:{templateUrl:"partials/ListItemM.html",controller:"InfiniteCtrl"}},accessLogged:!0,configAction:"new"}),$stateProvider.state("menu.new",{url:"/new",views:{menuContent:{templateUrl:"partials/EditItemM.html",controller:"EditItemCtrl"}},accessLogged:!0,configAction:"new"}),$stateProvider.state("menu.edit",{url:"/edit/:id",views:{menuContent:{templateUrl:"partials/EditItemM.html",controller:"EditItemCtrl"}},accessLogged:!0,configAction:"edit"}),$stateProvider.state("menu.view",{url:"/view/:id",views:{menuContent:{templateUrl:"partials/EditItemM.html",controller:"EditItemCtrl"}},accessLogged:!0,configAction:"view"}),$stateProvider.state("menu.listRelazioni",{url:"/listRelazioni",views:{menuContent:{templateUrl:"partials/ListItemRelazioniM.html",controller:"InfiniteCtrlRelazioni"}},accessLogged:!0,configAction:"new"}),$stateProvider.state("menu.newRelazioni",{url:"/newRelazioni/:id",views:{menuContent:{templateUrl:"partials/EditItemRelazioniM.html",controller:"EditItemCtrlRelazioni"}},accessLogged:!0,configAction:"new"}),$stateProvider.state("menu.editRelazioni",{url:"/editRelazioni/:id",views:{menuContent:{templateUrl:"partials/EditItemRelazioniM.html",controller:"EditItemCtrlRelazioni"}},accessLogged:!0,configAction:"edit"}),$stateProvider.state("menu.viewRelazioni",{url:"/viewRelazioni/:id",views:{menuContent:{templateUrl:"partials/EditItemRelazioniM.html",controller:"EditItemCtrlRelazioni"}},accessLogged:!0,configAction:"view"}),$stateProvider.state("menu.about",{url:"/about",views:{menuContent:{templateUrl:"partials/aboutM.html",controller:"AboutController"}},accessLogged:!1,configAction:"view"}),$stateProvider.state("menu.help",{url:"/help",views:{menuContent:{templateUrl:"partials/helpM.html",controller:"HelpController"}},accessLogged:!1,configAction:"view"}),$stateProvider.state("test",{url:"/test",templateUrl:"partials/testM.html",controller:"TestController",accessLogged:!1,configAction:"view"}),RestangularProvider.setBaseUrl("/apiQ"),RestangularProvider.setDefaultRequestParams({apiKey:"**********************"}),RestangularProvider.setRestangularFields({id:"_id.$oid"}),RestangularProvider.setRequestInterceptor(function(elem,operation){return"put"===operation?(elem._id=void 0,elem):elem})}]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("API_PROVIDER_URL",{base_url:"http://10.0.1.157:3000",url2:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("USER_ROLES",{all:"*",admin:"admin",editor:"editor",guest:"guest"});
"use strict";angular.module("myApp.services",[]).service("rService",[function(){this.time_diff=function(t1,t2){console.log("rService.time_diff ... "),console.log("t2"+t2),console.log("t1"+t1),console.log((t2-t1)/1e3/60/60);var diff=t2-t1,msec=diff,hh=Math.floor(msec/1e3/60/60);msec-=1e3*hh*60*60;var mm=Math.floor(msec/1e3/60);msec-=1e3*mm*60;var ss=Math.floor(msec/1e3);return msec-=1e3*ss,(hh+":"+mm).toString()}}]).service("version",[function(){return"0.0.1"}]).factory("AuthService",["API_PROVIDER_URL","$http","Session","$rootScope",function(API_PROVIDER_URL,$http,Session,$rootScope){return{login:function(credentials){return console.log($rootScope.base_url+"/api2/login"),$http.post($rootScope.base_url+"/api2/login",credentials).then(function(res){console.log("AuthService login then"),console.log(res),console.log(res.data[0].id_utenti),Session.create(res.data[0].id_utenti,res.data[0].nome_breve_utenti,res.data[0].token,res.data[0].isadmin_utenti)})},logout:function(credentials){return console.log("AuthService logout"),console.log($rootScope.base_url+"/api2/logout"),$http.post($rootScope.base_url+"/api2/logout",credentials).then(function(res){console.log("AuthService login then"),console.log(res),console.log(res.data.id_utenti),Session.destroy()})},isAuthenticated:function(){return console.log("AuthService isAuthenticated"),!!Session.id_utenti},isAuthorized:function(authorizedRoles){return console.log("AuthService isAuthorized"),angular.isArray(authorizedRoles)||(authorizedRoles=[authorizedRoles]),this.isAuthenticated()&&-1!==authorizedRoles.indexOf(Session.userRole)}}}]).service("Session",function(){return this.create=function(id_utenti,nome_breve_utenti,token,isAdmin){console.log("Session create id:"+id_utenti),console.log("Session nome_breve_utenti:"+nome_breve_utenti),console.log("Session token:"+token),console.log("Session isAdmin:"+isAdmin),this.id_utenti=id_utenti,this.nome_breve_utenti=nome_breve_utenti,this.token=token,this.isAdmin=isAdmin},this.destroy=function(){console.log("Session destroy"),this.id_utenti=null,this.nome_breve_utenti=null,this.token=null,this.isAdmin=!1},this});
"use strict";angular.module("myApp.controllers",[]);
"use strict";angular.module("myApp.controllers").controller("AppCtrl",["$scope","USER_ROLES","AUTH_EVENTS","$rootScope","AuthService","Session","Restangular","$state","$ionicPopup","$ionicSideMenuDelegate",function($scope,USER_ROLES,AUTH_EVENTS,$rootScope,AuthService,Session,Restangular,$state,$ionicPopup,$ionicSideMenuDelegate){console.log("AppCtrl ... "),$scope.currentUser=null,$scope.userRoles=USER_ROLES,$scope.isAuthorized=AuthService.isAuthorized,$scope.go=function(path){$state.go(path)},window.ionic&&console.log("IONIC defined! : "+window.ionic.version),$scope.toggleLeft=function(){$ionicSideMenuDelegate.toggleLeft($scope.$$childHead)},$rootScope.base_url="http://federadati.provincia.rimini.it:3000",console.log("WEB SERVICE WEB URL  : "+$rootScope.base_url),console.log("Restangular set base Url "+$rootScope.base_url+"/apiQ"),Restangular.setBaseUrl($rootScope.base_url+"/apiQ"),$rootScope.$on(AUTH_EVENTS.loginSuccess,function(event,next){console.log("AppCtrl: AUTH_EVENTS.loginSuccess ... "),console.log(event),console.log(next),$scope.currentUser=Session.nome_breve_utenti,Restangular.setDefaultRequestParams({apiKey:Session.token}),$state.go("menu.list")}),$rootScope.$on(AUTH_EVENTS.logoutSuccess,function(event,next){console.log("AppCtrl: AUTH_EVENTS.logourSuccess ... "),console.log(event),console.log(next),$scope.currentUser="",Restangular.setDefaultRequestParams({apiKey:""}),$state.go("menu.home")}),$rootScope.$on(AUTH_EVENTS.loginFailed,function(event,next){console.log("AppCtrl: AUTH_EVENTS.loginFailed ... "),console.log(event),console.log(next);var alertPopup=$ionicPopup.alert({title:"Login errato",template:"Immettere nome utente e password corrette"});alertPopup.then(function(){console.log("AppCtrl : Login errato OK"),$state.go("menu.home")})}),$rootScope.$on(AUTH_EVENTS.notAuthenticated,function(event,next){console.log("AUTH_EVENTS.notAuthenticated ... "),console.log(event),console.log(next),$scope.currentUser=Session.nome_breve_utenti;var alertPopup=$ionicPopup.alert({title:"Utente non autenticato",template:"Immettere nome utente e password"});alertPopup.then(function(){console.log("AppCtrl: alertPopup : OK"),$state.go("menu.home")})}),$rootScope.$on("$stateChangeStart",function(event,next){console.log("$stateChangeStart: "+next.accessLogged),next.accessLogged?(console.log("$stateChangeStart: check if isAuthenticated : "+AuthService.isAuthenticated()),AuthService.isAuthenticated()||(event.preventDefault(),$rootScope.$broadcast(AUTH_EVENTS.notAuthenticated))):console.log("$stateChangeStart: PATH free")})}]).controller("LoginController",["$scope","$rootScope","AUTH_EVENTS","AuthService","$state",function($scope,$rootScope,AUTH_EVENTS,AuthService,$state){console.log("LoginController..."),console.log("LoginController...currentUser:"+$scope.currentUser),$scope.credentials={username:"",password:""},$scope.leftButtons=[{type:"button-icon button-clear ion-navicon",tap:function(){$ionicSideMenuDelegate.toggleLeft($scope.$$childHead)}}],$scope.navTitle='<span class="item-calm">Gestione Volontari</span>',$scope.goto_help=function(){console.log("HelpController : Route to login"),$state.go("menu.help")},$scope.fullscreenOn=function(){console.log("AboutController : fullscreen"),console.log("AboutController : fullscreen enabled? : "+screenfull.enabled),screenfull.request()},$scope.fullscreenOff=function(){console.log("AboutController : fullscreen"),console.log("AboutController : fullscreen enabled? : "+screenfull.enabled),screenfull.exit()},$scope.login=function(credentials){console.log("login:calling .. AuthService. .."),console.log(credentials),AuthService.login(credentials).then(function(){$rootScope.$broadcast(AUTH_EVENTS.loginSuccess)},function(){$rootScope.$broadcast(AUTH_EVENTS.loginFailed)})},$scope.logout=function(credentials){console.log("logout:calling .. AuthService. .."),console.log(credentials),AuthService.logout(credentials).then(function(){$rootScope.$broadcast(AUTH_EVENTS.logoutSuccess)},function(){$rootScope.$broadcast(AUTH_EVENTS.logoutSuccess)})}}]).controller("AboutController",["$scope","$rootScope","AUTH_EVENTS","AuthService","Session","$location","$ionicLoading","$http","$ionicPopup",function($scope,$rootScope,AUTH_EVENTS,AuthService,Session,$location,$ionicLoading,$http,$ionicPopup){console.log("AboutController..."),console.log(Session),$scope.navTitle=Session.nome_breve_utenti,$scope.base_url=$rootScope.base_url,$scope.$location={},angular.forEach("protocol host port path search hash".split(" "),function(method){$scope.$location[method]=function(){var result=$location[method].call($location);return angular.isObject(result)?angular.toJson(result):result}}),$scope.fullscreenOn=function(){console.log("AboutController : fullscreen"),console.log("AboutController : fullscreen enabled? : "+screenfull.enabled),screenfull.request()},$scope.fullscreenOff=function(){console.log("AboutController : fullscreen"),console.log("AboutController : fullscreen enabled? : "+screenfull.enabled),screenfull.exit()},$scope.test_connection=function(){console.log("AboutController : test_connection"),$ionicLoading.show({template:"Loading..."}),$http({method:"GET",url:$rootScope.base_url+"/mv/testconnection"}).success(function(data,status,headers,config){console.log($rootScope.base_url+"/mv/testconnection"),console.log(data),console.log(status),console.log(headers),console.log(config);var alertPopup=$ionicPopup.alert({title:"OK!",template:"Test di connessione ok"});alertPopup.then(function(){console.log("Quit popup")})}).error(function(data,status,headers,config){console.log($rootScope.base_url+"/mv/testconnection"),console.log(data),console.log(status),console.log(headers),console.log(config);var alertPopup=$ionicPopup.alert({title:"Errori!",template:"Test di connessione FALLITO"});alertPopup.then(function(){console.log("Quit popup")})}),$ionicLoading.hide()}}]).controller("HelpController",["$scope","$rootScope","AUTH_EVENTS","AuthService","Session","$location","$ionicLoading","$http","$ionicPopup","$ionicSlideBoxDelegate","$state",function($scope,$rootScope,AUTH_EVENTS,AuthService,Session,$location,$ionicLoading,$http,$ionicPopup,$ionicSlideBoxDelegate,$state){console.log("HelpController..."),$scope.goto_login=function(){console.log("HelpController : Route to login"),$state.go("menu.login")}}]);
"use strict";angular.module("myApp.controllers").controller("EditItemCtrl",["$scope","$filter","$state","$stateParams","Restangular","rService","Session","$ionicPopup",function($scope,$filter,$state,$stateParams,Restangular,rService,Session,$ionicPopup){console.log("EditItemCtrl:  configAction :"+$state.current.configAction),console.log($state),console.log($stateParams);var configAction=$state.current.configAction;if($scope.configAction=configAction,$scope.item={},$scope.openedPopupDate=!1,console.log("EditItemCtrl:  load button action :"),$scope.toggleRight=function(){$state.go("menu.list")},$scope.rightButtons=[{type:"button-icon button-clear ion-email",tap:function(){alert("EditItemCtrl : rightButton fired!")}}],"edit"==configAction||"view"==configAction||"new"==configAction){console.log("EditItemCtrl : get data from serviziAll : "+$stateParams.id+" ACTION "+configAction),"new"==configAction&&(console.log("EditItemCtrl : NEW : set ID === 0"),$stateParams.id=0);var baseAccounts=Restangular.all("serviziAll");baseAccounts.getList({limit:50,id_servizi_selezione:$stateParams.id}).then(function(accounts){if($scope.item=accounts[0],console.log("EditItemCtrl : load data ...."),console.log("EditItemCtrl : patch time object - 1"),console.log(accounts[0].da_ora_servizi),console.log(accounts[0].a_ora_servizi),console.log(accounts[0].data_servizi),console.log("EditItemCtrl : patch time object - 2 - change format"),$scope.item.data_servizi=$filter("date")(accounts[0].data_servizi,"yyyy-MM-dd"),$scope.item.a_ora_servizi=accounts[0].a_ora_servizi.substr(11,5),$scope.item.da_ora_servizi=accounts[0].da_ora_servizi.substr(11,5),console.log($scope.item.data_servizi),console.log($scope.item.a_ora_servizi),console.log($scope.item.da_ora_servizi),console.log("EditItemCtrl : elenco_id_volontari"),console.log(accounts[0].elenco_id_volontari),console.log(accounts[0].elenco_id_volontari.split(",")),$scope.item.id_utenti=accounts[0].id_utenti,$scope.item.lista_volontari_servizi=accounts[0].elenco_id_volontari.split(","),$scope.timeCalculated=rService.time_diff($scope.item.da_ora_servizi,$scope.item.a_ora_servizi),$scope.elenco_id_rapporti_servizio=accounts[0].elenco_id_rapporti_servizio,$scope.id_rapporto_valido_servizio=accounts[0].id_rapporto_valido_servizio,$scope.item.annullato_servizi=accounts[0].annullato_servizi,"new"==configAction&&(console.log("EditItemCtrl : NEW : INIT DATA"),$scope.item=[],$scope.item.id_utenti=null,$scope.item.lista_volontari_servizi=[],$scope.item.data_servizi=$filter("date")(new Date,"yyyy-MM-dd"),$scope.item.a_ora_servizi=$filter("date")(new Date,"HH:mm"),$scope.item.da_ora_servizi=$filter("date")(new Date,"HH:mm"),$scope.item.annullato_servizi=0),"undefined"!=typeof $scope.item.id_utenti&&null!=$scope.item.id_utenti){console.log("EditItemCtrl : populate volontariList per : "+$scope.item.id_utenti);var volontariList=Restangular.all("volontariAll");volontariList.getList({id_volontari_utenti:$scope.item.id_utenti}).then(function(users){console.log("EditItemCtrl : patch accounts");var fancyArray=[],arrayLength=users.length;console.log("EditItemCtrl : patch accounts for "+arrayLength);for(var i=0;arrayLength>i;i++){var more={id:users[i].id,checked:accounts[0].elenco_id_volontari.indexOf(users[i].id)>-1?!0:!1,text:users[i].nome_completo_volontari};console.log(more),fancyArray.push(more)}console.log(users),$scope.volontariList=fancyArray,console.log($scope.volontariList)})}if(Session.isAdmin){console.log("EditItemCtrl : populate list : isAdmin "+Session.id_utenti+" "+Session.nome_breve_utenti);var utentiList=Restangular.all("utentiAll");utentiList.getList().then(function(accounts){$scope.utentiList=accounts;var fancyArray=[],arrayLength=accounts.length;console.log("EditItemCtrl : patch accounts for UTENTI LIST FANCY "+arrayLength);for(var i=0;arrayLength>i;i++){var more={id:accounts[i].id_utenti,checked:accounts[i].id_utenti===$scope.item.id_utenti?!0:!1,text:accounts[i].nome_breve_utenti};console.log(more),fancyArray.push(more)}$scope.utentiList=fancyArray})}else{console.log("EditItemCtrl : populate list : NOT isAdmin "),console.log(Session.id_utenti),$scope.utentiList=[];var fancyArray=[],more={id:Session.id_utenti,checked:!0,text:Session.nome_breve_utenti};fancyArray.push(more),$scope.utentiList=fancyArray,$scope.item.id_utenti=Session.id_utenti,$scope.item.nome_breve_utenti=Session.nome_breve_utenti}})}$scope.master={},$scope.timeCalculated=0,$scope.timechanged=function(){console.log("EditItemCtrl : Time changed to: "+$scope.item.da_ora_servizi),console.log("EditItemCtrl : Time changed to: "+$scope.item.a_ora_servizi),$scope.timeCalculated=rService.time_diff($scope.item.da_ora_servizi,$scope.item.a_ora_servizi),$scope.timeCalculated<1&&($scope.timeCalculated=$scope.timeCalculated+24)},$scope.cancel_action=function(item){console.log("EditItemCtrl : cancel_action....");var confirmPopup=$ionicPopup.confirm({title:"Messaggio",template:"Annullare il presente elemento?"});confirmPopup.then(function(res){res?(console.log("EditItemCtrl : Deleting...."),console.log(item.id_servizi),Restangular.oneUrl("servizi","/api1/servizi/"+item.id).get().then(function(account){console.log("get!"),console.log(account),account.annullato_servizi=1,console.log("put!"),Restangular.setBaseUrl("/api1"),account.customPUT({annullato_servizi:1},item.id,{},{}),Restangular.setBaseUrl("/apiQ"),$state.go("menu.list")})):console.log("EditItemCtrl : Canceled....")})},$scope.save_action=function(){console.log("EditItemCtrl:save_action:Start validator : ");var msg="";if("undefined"==typeof $scope.item.elenco_id_volontari&&(msg="Selezionare un volontario!"),""==$scope.item.elenco_id_volontari&&(msg="Selezionare un volontario!"),console.log("EditItemCtrl:save_action:Start validator :data_servizi :"+$scope.item.data_servizi),console.log("EditItemCtrl:save_action:Start validator :data_servizi :"+new Date),!Session.isAdmin&&$scope.item.data_servizi<new Date&&(msg="Non è possibile selezionare date del servizio precedenti a quelle odierna."),""!=msg){console.log("validate KO");var alertPopup=$ionicPopup.alert({title:"Errori di input",template:msg});alertPopup.then(function(){console.log("Thank you for not eating my delicious ice cream cone")})}else{console.log("validate OK ... saving data ...");var new_servizio={id_utenti:$scope.item.id_utenti,data_servizi:$scope.item.data_servizi,da_ora_servizi:"1900-01-01T"+$scope.item.da_ora_servizi+":00.000Z",a_ora_servizi:"1900-01-01T"+$scope.item.a_ora_servizi+":00.000Z",note_servizi:$scope.item.note_servizi,lista_volontari:$scope.item.elenco_id_volontari.split(","),rapporto_servizi:$scope.item.rapporto_servizi};console.log("Posting ... "),console.log(new_servizio);var baseServizi=Restangular.allUrl("servizi","/api1/servizi");baseServizi.post(new_servizio).then(function(msg){console.log("Object saved OK"),console.log(msg.id),console.log("Saving detail....data ");var alertPopup=$ionicPopup.alert({title:"Messaggio",template:"Dato inserito con successo!"});alertPopup.then(function(){console.log("ok redirect to id: "+msg.id),$state.go("menu.edit",{id:msg.id})})},function(msg){console.log("There was an error saving ... "),console.log(msg)})}},$scope.new_relazione_action=function($id){console.log("Route to newRelazioni con id : "+$id),$state.go("menu.newRelazioni",{id:$id})},$scope.goto_relazione_action=function($id){console.log("Route to editRelazioni con id : "+$id),$state.go("menu.editRelazioni",{id:$id})},$scope.popupDate=function($event){console.log("EditItemCtrl : popupDate"),$event.preventDefault(),$event.stopPropagation(),$scope.openedPopupDate=$scope.openedPopupDate?!1:!0},$scope.debug_action=function(item){console.log("DEBUG_ACTION"),console.log(item)},console.log("EditItemCtrl : watching item.id_utenti"),$scope.$watch("item.id_utenti",function(newValue,oldValue){if(console.log("EditItemCtrl : WATCH! id_utenti changed!"+newValue+" "+oldValue),"new"==configAction&&"undefined"!=typeof newValue&&null!=newValue){var volontariList=Restangular.all("volontariAll");volontariList.getList({id_volontari_utenti:newValue}).then(function(users){console.log("EditItemCtrl : WATCH! get list for value "+newValue);var fancyArray=[],arrayLength=users.length;console.log("EditItemCtrl : WATCH! patch accounts for "+arrayLength);for(var i=0;arrayLength>i;i++){var more={id:users[i].id,checked:!1,text:users[i].nome_completo_volontari};console.log(more),fancyArray.push(more)}console.log(users),$scope.item.elenco_volontari="",$scope.item.elenco_id_volontari="",$scope.volontariList=fancyArray,console.log($scope.volontariList)})}}),$scope.$watch("item.volontariList1",function(newValue,oldValue){console.log("EditItemCtrl : DA_item.lista_volontari_servizi"+newValue+" "+oldValue)})}]).controller("InfiniteCtrl",["$scope","$location","Restangular","$filter","Session","$ionicModal","$ionicSideMenuDelegate","$ionicPopover","$ionicLoading",function($scope,$location,Restangular,$filter,Session,$ionicModal,$ionicSideMenuDelegate,$ionicPopover,$ionicLoading){console.log("SERVIZI>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"),console.log("InfiniteCtrl start..."),$scope.totalPages=0,$scope.itemsCount=0,$scope.currentPage=1,$scope.currentItemDetail=null,$scope.totalItems=0,$scope.pageSize=1e3,$scope.startPage=0,$scope.openedPopupDate=!1,$scope.utentiList=[],$scope.id_utenti_selezione=0,$scope.items=[],$scope.loadMoreDataCanBeLoaded=!0,$ionicModal.fromTemplateUrl("partials/sortModal.html",function(sortModal){$scope.sortModal=sortModal},{scope:$scope,animation:"slide-in-up"}),$ionicModal.fromTemplateUrl("partials/detailModal.html",function(detailModal){$scope.detailModal=detailModal},{scope:$scope,animation:"slide-in-up"}),$scope.openSortModal=function(){console.log("InfiniteCtrl Sort Modal ..."),$scope.sortModal.show()},$scope.openDetailModal=function(item){console.log("InfiniteCtrl Detail Modal ... :"),console.log(item),item.data_servizi=$filter("date")(item.data_servizi,"dd/MM/yyyy"),item.a_ora_servizi=item.a_ora_servizi.substr(11,5),item.da_ora_servizi=item.da_ora_servizi.substr(11,5),$scope.currentItemDetail=item,$scope.detailModal.show()},$scope.closeSortModal=function(){$scope.sortModal.hide()},$scope.closeDetailModal=function(){$scope.detailModal.hide()},$scope.saveSort=function(){console.log("SORT MODAL "+this.filterTerm+" sort "+this.sortBy+" id_selezione :"+this.id_utenti_selezione),$scope.filterCriteria.id_utenti_selezione=this.id_utenti_selezione,console.log($scope.filterCriteria),$scope.filterTerm=this.filterTerm,$scope.sortBy=this.sortBy,$scope.sortModal.hide(),$scope.fetchResult()},$scope.OpenFilter=function(){console.log("OpenFilter .. sortModal.show()"),$scope.sortModal.show()},$scope.filterCriteria={pageNumber:1,count:0,limit:$scope.pageSize,start:0,sortDir:"asc",sortedBy:"id",id_utenti_selezione:Session.isAdmin?0:Session.id_utenti,mese_selezione:0,anno_selezione:0},console.log("InfiniteCtrl SERVIZI INIT filterCriteria"),console.log($scope.filterCriteria);var volontariList=Restangular.all("utentiAll");console.log("InfiniteCtrl #VolontariListURL "+volontariList.getRestangularUrl()),volontariList.getList().then(function(accounts){console.log(accounts),Session.isAdmin?(console.log("InfiniteCtrl : populate list : isAdmin "),$scope.utentiList=accounts,$scope.utentiList.push({id_utenti:0,nome_breve_utenti:"TUTTI"}),$scope.id_utenti_selezione=0):(console.log("InfiniteCtrl : populate list : NOT isAdmin "),console.log(Session.id_utenti),$scope.id_utenti_selezione=Session.id_utenti,$scope.filterCriteria.id_utenti_selezione=Session.id_utenti,$scope.utentiList=[],$scope.utentiList.push({id_utenti:Session.id_utenti,nome_breve_utenti:Session.nome_breve_utenti}))}),$scope.fetchResult=function(){console.log("InfiniteCtrl: fetchResult"),console.log("InfiniteCtrl: impostazione criteri di filtro");var offset_page=($scope.currentPage-1)*$scope.pageSize;$scope.filterCriteria.start=offset_page,console.log($scope.filterCriteria);var serviziList=Restangular.all("serviziAll");return console.log("InfiniteCtrl...fetchResult - GET Count"),console.log("InfiniteCtrl...fetchResult - GET data"),$scope.filterCriteria.count=0,$ionicLoading.show({template:"Dati in arrivo!"}),serviziList.getList($scope.filterCriteria).then(function(data){$scope.items=data,console.log(" .. data loaded!"),$ionicLoading.hide()},function(){$scope.items=[]})},$scope.selectPage=function(){var page=$scope.currentPage;console.log("SELECT PAGE ..."),console.log("Page changed to: "+$scope.currentPage),console.log("InfiniteCtrl...selectPage:"+page),$scope.currentPage=page,$scope.filterCriteria.pageNumber=page,$scope.fetchResult()},console.log("InfiniteCtrl : selectPage 1"),$scope.selectPage(),$scope.editItem=function(itemId){console.log("editItem : change state"),console.log(itemId),$location.path("/menu/edit/"+itemId)},$scope.editItem=function(itemId){console.log("viewItem : change state"),console.log(itemId),$location.path("/menu/view/"+itemId)},$scope.editRelazioni=function(itemId){console.log("/menu/editItem"),$location.path("/menu/editRelazioni/"+itemId)},$scope.newRelazioni=function(){console.log("/menu/new"),$location.path("/menu/new")},$scope.debug_action=function(){console.log("DEBUG_ACTION"),console.log($scope)},$scope.newRelazioniFromPopover=function(){console.log("/menu/new"),$scope.popover.remove(),$location.path("/menu/new")},$scope.OpenFilterFromPopover=function(){console.log("OpenFilterFromPopover"),$scope.popover.hide(),$scope.sortModal.show()};var templatePopover="<ion-popover-view>";templatePopover+="<ion-content>",templatePopover+='<div class="list">',templatePopover+='<a class="item item-icon-left" ng-click="newRelazioniFromPopover()" ><i class="icon ion-plus-circled"></i> Nuovo elemento</a>',templatePopover+='<a class="item item-icon-left" ng-click="OpenFilterFromPopover()"><i class="icon ion-funnel"></i>Filtro</a>',templatePopover+="</div>",templatePopover+="</ion-content>",templatePopover+="</ion-popover-view>",console.log(templatePopover),$scope.popover=$ionicPopover.fromTemplate(templatePopover,{scope:$scope}),$scope.$on("$destroy",function(){$scope.popover.remove()})}]);
"use strict";angular.module("myApp.controllers").controller("EditItemCtrlRelazioni",["$scope","$filter","$state","$stateParams","Restangular","rService","Session","$ionicPopup",function($scope,$filter,$state,$stateParams,Restangular,rService,Session,$ionicPopup){console.log("EditItemCtrlRelazioni:  configAction :"+$state.current.configAction),console.log($state),console.log($stateParams);var configAction=$state.current.configAction;if($scope.configAction=configAction,$scope.item={},$scope.openedPopupDate=!1,console.log("EditItemCtrlRelazioni : get data from rapportiAll : "+$stateParams.id+" Action "+configAction),"edit"==configAction||"view"==configAction)var baseAccounts=Restangular.all("rapportiAll"),queryOptions={limit:50,id_rapporti_selezione:$stateParams.id};else var baseAccounts=Restangular.all("serviziAll"),queryOptions={limit:50,id_servizi_selezione:$stateParams.id};baseAccounts.getList(queryOptions).then(function(accounts){if(console.log(accounts),"edit"==configAction||"view"==configAction?(console.log("EditItemCtrlRelazioni : load data for ...."+configAction),$scope.item.id=$stateParams.id,$scope.item.id_servizi=accounts[0].id_servizi,$scope.item.id_utenti=accounts[0].id_utenti,$scope.item.nome_breve_utenti=accounts[0].nome_breve_utenti,$scope.item.elenco_id_volontari=accounts[0].elenco_id_volontari,$scope.item.elenco_volontari=accounts[0].elenco_volontari,$scope.item.lista_volontari_relazioni=accounts[0].elenco_id_volontari.split(","),$scope.item.data_relazioni=$filter("date")(accounts[0].data_relazioni,"yyyy-MM-dd"),$scope.item.a_ora_relazioni=$filter("date")(accounts[0].a_ora_relazioni,"HH:mm"),$scope.item.da_ora_relazioni=$filter("date")(accounts[0].da_ora_relazioni,"HH:mm"),$scope.timeCalculated=rService.time_diff($scope.item.da_ora_relazioni,$scope.item.a_ora_relazioni),$scope.item.auto_relazioni=accounts[0].auto_relazioni,$scope.item.note_relazioni=accounts[0].note_relazioni,$scope.item.rapporto_relazioni=accounts[0].rapporto_relazioni,$scope.item.annullato_relazioni=accounts[0].annullato_relazioni):(console.log("EditItemCtrlRelazioni : load data for ...."+configAction),$scope.item.id_servizi=$stateParams.id,$scope.item.id_utenti=accounts[0].id_utenti,$scope.item.nome_breve_utenti=accounts[0].nome_breve_utenti,$scope.item.elenco_id_volontari=accounts[0].elenco_id_volontari,$scope.item.elenco_volontari=accounts[0].elenco_volontari,$scope.item.lista_volontari_relazioni=accounts[0].elenco_id_volontari.split(","),$scope.item.elenco_id_volontari=accounts[0].elenco_id_volontari,$scope.item.data_relazioni=$filter("date")(accounts[0].data_servizi,"yyyy-MM-dd"),$scope.item.a_ora_relazioni=$filter("date")(accounts[0].a_ora_servizi,"HH:mm"),$scope.item.da_ora_relazioni=$filter("date")(accounts[0].da_ora_servizi,"HH:mm"),$scope.timeCalculated=rService.time_diff($scope.item.da_ora_relazioni,$scope.item.a_ora_relazioni),$scope.item.auto_relazioni=" -- NEW AUTO --",$scope.item.note_relazioni=" -- NEW NOTE --",$scope.item.rapporto_relazioni=" -- NEW RAPPORTO --",$scope.item.annullato_relazioni=0),"undefined"!=typeof $scope.item.id_utenti&&null!=$scope.item.id_utenti){console.log("EditItemCtrlRelazioni : fill volontariList per : "+$scope.item.id_utenti);var volontariList=Restangular.all("volontariAll");volontariList.getList({id_volontari_utenti:$scope.item.id_utenti}).then(function(users){var fancyArray=[],arrayLength=users.length;console.log("EditItemCtrlRelazioni : patch accounts for n. "+arrayLength);for(var i=0;arrayLength>i;i++){var more={id:users[i].id,checked:accounts[0].elenco_id_volontari.indexOf(users[i].id)>-1?!0:!1,text:users[i].nome_completo_volontari};fancyArray.push(more)}$scope.volontariList=fancyArray,console.log($scope.volontariList)})}if(Session.isAdmin){console.log("EditItemCtrlRelazioni : populate list : isAdmin "+Session.id_utenti+" "+Session.nome_breve_utenti);var utentiList=Restangular.all("utentiAll");utentiList.getList().then(function(accounts){$scope.utentiList=accounts;var fancyArray=[],arrayLength=accounts.length;console.log("EditItemCtrlRelazioni : patch accounts for UTENTI LIST FANCY "+arrayLength);for(var i=0;arrayLength>i;i++){var more={id:accounts[i].id_utenti,checked:accounts[i].id_utenti===$scope.item.id_utenti?!0:!1,text:accounts[i].nome_breve_utenti};console.log(more),fancyArray.push(more)}$scope.utentiList=fancyArray})}else{console.log("EditItemCtrlRelazioni : populate list : NOT isAdmin "),console.log(Session.id_utenti),$scope.utentiList=[];var fancyArray=[],more={id:Session.id_utenti,checked:!0,text:Session.nome_breve_utenti};fancyArray.push(more),$scope.utentiList=fancyArray,$scope.item.id_utenti=Session.id_utenti,$scope.item.nome_breve_utenti=Session.nome_breve_utenti}}),$scope.toggleRight=function(){$state.go("menu.listRelazioni")},$scope.master={},$scope.timeCalculated=0,$scope.timechanged=function(){console.log("EditItemCtrlRelazioni : Time changed to: "+$scope.item.da_ora_relazioni),console.log("EditItemCtrlRelazioni : Time changed to: "+$scope.item.a_ora_relazioni),$scope.timeCalculated=rService.time_diff($scope.item.da_ora_relazioni,$scope.item.a_ora_relazioni),$scope.timeCalculated<1&&($scope.timeCalculated=$scope.timeCalculated+24)},$scope.cancel_action=function(item){console.log("EditItemCtrl : cancel_action....");var confirmPopup=$ionicPopup.confirm({title:"Messaggio",template:"Annullare il presente elemento?"});confirmPopup.then(function(res){res?(console.log("EditItemCtrlRelazioni : Deleting...."),console.log(item.id),Restangular.oneUrl("relazioni","/api1/relazioni/"+item.id).get().then(function(account){console.log("get!"),console.log(account),account.annullato_relazioni=1,console.log("put!"),Restangular.setBaseUrl("/api1"),account.customPUT({annullato_relazioni:1},item.id,{},{}),Restangular.setBaseUrl("/apiQ"),$state.go("menu.listRelazioni")}),console.log("EditItemCtrlRelazioni : ANNULLATO "+item.id)):console.log("EditItemCtrl : Canceled....")})},$scope.save_action=function(){console.log("EditItemCtrlRelazioni:save_action:Start validator : ");var msg="";if("undefined"==typeof $scope.item.elenco_id_volontari&&(msg="Selezionare un volontario!"),""==$scope.item.elenco_id_volontari&&(msg="Selezionare un volontario!"),0==$scope.item.lista_volontari_relazioni.length&&(msg="Selezionare un volontario!"),""!=msg){console.log("validate KO");var alertPopup=$ionicPopup.alert({title:"Errori di input",template:msg});alertPopup.then(function(){console.log("Thank you for not eating my delicious ice cream cone")})}else{console.log("validate OK ... saving data ...");var new_relazione={id_utenti:$scope.item.id_utenti,id_servizi:$scope.item.id_servizi,data_relazioni:$scope.item.data_relazioni,da_ora_relazioni:"1900-01-01T"+$scope.item.da_ora_relazioni+":00.000Z",a_ora_relazioni:"1900-01-01T"+$scope.item.a_ora_relazioni+":00.000Z",note_relazioni:$scope.item.note_relazioni,auto_relazioni:$scope.item.auto_relazioni,rapporto_relazioni:$scope.item.rapporto_relazioni,lista_volontari:$scope.item.lista_volontari_relazioni};console.log("POST ... "),console.log(new_relazione),console.log(new_relazione);var baseServizi=Restangular.allUrl("relazioni","/api1/relazioni");baseServizi.post(new_relazione).then(function(msg){console.log("Object saved OK"),console.log(msg.id);var alertPopup=$ionicPopup.alert({title:"Messaggio",template:"Dato inserito con successo!"});alertPopup.then(function(){console.log("ok redirect to id: "+msg.id),$state.go("menu.viewRelazioni",{id:msg.id})})},function(msg){console.log("There was an error saving ... "),console.log(msg)})}},$scope.popupDate=function($event){console.log("EditItemCtrlRelazioni : popupDate"),$event.preventDefault(),$event.stopPropagation(),$scope.openedPopupDate=$scope.openedPopupDate?!1:!0},$scope.debug_action=function(item){console.log("DEBUG_ACTION"),console.log(item)},console.log("EditItemCtrlRelazioni : watching item.id_utenti"),$scope.$watch("item.id_utenti",function(newValue,oldValue){console.log("EditItemCtrlRelazioni : id_utenti changed!"+newValue+" "+oldValue+" NO ACTION ")})}]).controller("InfiniteCtrlRelazioni",["$scope","$location","Restangular","$filter","Session","$ionicPopup","$ionicPopover",function($scope,$location,Restangular,$filter,Session,$ionicPopup,$ionicPopover){console.log(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"),console.log("InfiniteCtrlRelazioni START!"),$scope.totalPages=0,$scope.itemsCount=0,$scope.currentPage=1,$scope.totalItems=0,$scope.pageSize=8,$scope.startPage=0,$scope.openedPopupDate=!1,$scope.utentiList=[],$scope.filterCriteria={pageNumber:1,count:0,limit:$scope.pageSize,start:0,sortDir:"asc",sortedBy:"id",id_utenti_selezione:Session.isAdmin?0:Session.id_utenti,mese_selezione:0,anno_selezione:0},console.log("InfiniteCtrlRapporti INIT filterCriteria:"),console.log($scope.filterCriteria);var volontariList=Restangular.all("utentiAll");volontariList.getList().then(function(accounts){console.log(accounts),Session.isAdmin?(console.log("InfiniteCtrlRapporti : populate list : isAdmin "),$scope.utentiList=accounts,$scope.utentiList.push({id_utenti:0,nome_breve_utenti:"TUTTI"}),$scope.id_utenti_selezione=0):(console.log("InfiniteCtrlRapporti : populate list : NOT isAdmin "),console.log(Session.id_utenti),$scope.id_utenti_selezione=Session.id_utenti,$scope.filterCriteria.id_utenti_selezione=Session.id_utenti,$scope.utentiList=[],$scope.utentiList.push({id_utenti:Session.id_utenti,nome_breve_utenti:Session.nome_breve_utenti}))}),$scope.fetchResult=function(){console.log("InfiniteCtrlRapporti...fetchResult"),console.log($scope.filterCriteria);var serviziList=Restangular.all("rapportiAll");console.log("InfiniteCtrlRapporti...fetchResult - count"),$scope.filterCriteria.count=1,serviziList.getList($scope.filterCriteria).then(function(data){console.log("COUNT: data[0].totalItems:"+data[0].totalItems),console.log(data),$scope.totalItems=data.length>0?data[0].totalItems:0},function(){$scope.totalItems=0}),console.log("InfiniteCtrlRapporti...fetchResult - get data");var offset_page=($scope.currentPage-1)*$scope.pageSize;return $scope.filterCriteria.count=0,$scope.filterCriteria.start=offset_page,serviziList.getList($scope.filterCriteria).then(function(data){console.log(data),$scope.items=data},function(){$scope.items=[]})},$scope.selectPage=function(){var page=$scope.currentPage;console.log("Page changed to: "+$scope.currentPage),console.log("InfiniteCtrl...selectPage:"+page),$scope.currentPage=page,$scope.filterCriteria.pageNumber=page,$scope.fetchResult()},console.log("InfiniteCtrl : selectPage 1"),$scope.selectPage(1),$scope.popupDate=function($event){console.log("popupDate"),$event.preventDefault(),$event.stopPropagation(),$scope.openedPopupDate=$scope.openedPopupDate?!1:!0},$scope.editItem=function(itemId){console.log("editItem"),$location.path("/menu/editRelazioni/"+itemId)},$scope.viewItem=function(itemId){console.log("viewItem"),$location.path("/menu/viewRelazioni/"+itemId)},$scope.toggleRight=function(){var alertPopup=$ionicPopup.alert({title:"*TODO*",template:"TODO"});alertPopup.then(function(){console.log("EditItemCtrlRelazioni: toggleRight")})},$scope.OpenFilterFromPopover=function(){$scope.popover.hide()};var templatePopover="<ion-popover-view>";templatePopover+="<ion-content>",templatePopover+='<div class="list">',templatePopover+='<a class="item item-icon-left" ng-click="OpenFilterFromPopover()"><i class="icon ion-funnel"></i>Filtro</a>',templatePopover+="</div>",templatePopover+="</ion-content>",templatePopover+="</ion-popover-view>",console.log(templatePopover),$scope.popover=$ionicPopover.fromTemplate(templatePopover,{scope:$scope}),$scope.$on("$destroy",function(){$scope.popover.remove()})}]);
"use strict";angular.module("myApp.controllers").controller("ReportCtrlMobile",["$scope","$rootScope","Restangular","rService","$filter","$http","$sce","Session","$ionicPopup",function($scope,$rootScope,Restangular,rService,$filter,$http,$sce,Session,$ionicPopup){if($scope.timeCalculated=0,$scope.item={},$scope.item.tipo_report=1,$scope.openedPopupDate=!1,$scope.showDownloadButton=!1,$scope.showDownloadUrl=!1,$scope.showGoogleViewUrl="",Session.isAdmin){console.log("EditItemCtrl : populate list : isAdmin ");var utentiList=Restangular.all("utentiAll");utentiList.getList().then(function(accounts){$scope.utentiList=accounts,$scope.utentiList.push({id_utenti:0,nome_breve_utenti:"TUTTI"})})}else console.log("EditItemCtrl : populate list : NOT isAdmin "),console.log(Session.id_utenti),$scope.utentiList=[],$scope.utentiList.push({id_utenti:Session.id_utenti,nome_breve_utenti:Session.nome_breve_utenti}),$scope.item.id_utenti=Session.id_utenti;$scope.popupDate=function($event){console.log("popupDate"),$event.preventDefault(),$event.stopPropagation(),$scope.openedPopupDate=$scope.openedPopupDate?!1:!0},$scope.view_pdf=function(){console.log("ReportCtrlMobile: view pdf open window..."),console.log($rootScope.base_url+$scope.showDownloadUrl);window.open($scope.showGoogleViewUrl,"_blank","location=no")},$scope.build_report=function(item){console.log("ReportCtrlMobile: build_report..."),console.log(item),console.log("ReportCtrlMobile:build report:Start validator : ");var msg="";if(msg=$scope.item.id_utenti>=0?"":"Selezionare una Associazione",$scope.item.data_servizi||(msg="Selezionare una data!"),""!=msg){console.log("validate KO");var alertPopup=$ionicPopup.alert({title:"Errori di input",template:msg});alertPopup.then(function(){console.log("XXThank you for not eating my delicious ice cream cone")})}else{var new_stampa={id_utenti:$scope.item.id_utenti,tipo_report:$scope.item.tipo_report,data_servizi:$scope.item.data_servizi,relazione_servizio:$scope.item.relazione_servizio,utenti_controllati:$scope.item.utenti_controllati,dati_auto:$scope.item.dati_auto,giorno_servizi:$filter("date")($scope.item.data_servizi,"dd"),mese_servizi:$filter("date")($scope.item.data_servizi,"MM"),anno_servizi:$filter("date")($scope.item.data_servizi,"yyyy"),nome_file:(new Date).getTime(),mobile:1},utentiList=Restangular.allUrl("pdf","/pdf");utentiList.getList(new_stampa).then(function(accounts){if(console.log(accounts),"NODATATODISPLAY"==accounts[0].report_filename){var alertPopup=$ionicPopup.alert({title:"Messaggio",template:"Nessun dato da visualizzare"});alertPopup.then(function(){console.log("XXThank you for not eating my delicious ice cream cone")})}else $scope.showDownloadButton=!0,$scope.showDownloadButtonText="Scarica la stampa pdf ("+accounts[0].report_filename+")",$scope.showDownloadUrl="/pdfget?nomefile="+accounts[0].report_filename,$scope.showGoogleViewUrl="https://docs.google.com/viewer?url="+encodeURIComponent($rootScope.base_url+$scope.showDownloadUrl);console.log($scope.showDownloadUrl)},function(){console.log("ERRORE")})}}}]).controller("TestController",["$scope","Session","Restangular","$rootScope","$modal","$filter","$location",function($scope,Session,Restangular,$rootScope,$modal,$filter,$location){console.log("TestController... START!"),$scope.totalPages=0,$scope.itemsCount=0,$scope.currentPage=1,$scope.totalItems=0,$scope.pageSize=3,$scope.startPage=0,$scope.openedPopupDate=!1,$scope.utentiList=[],$scope.filterCriteria={pageNumber:1,count:0,limit:$scope.pageSize,start:0,sortDir:"asc",sortedBy:"id",id_utenti_selezione:0,mese_selezione:0,anno_selezione:0};var volontariList=Restangular.all("utentiAll");volontariList.getList().then(function(accounts){console.log(accounts),Session.isAdmin?(console.log("TestController : populate list : isAdmin "),$scope.utentiList=accounts,$scope.utentiList.push({id_utenti:0,nome_breve_utenti:"TUTTI"}),$scope.id_utenti_selezione=0):(console.log("TestController : populate list : NOT isAdmin "),console.log(Session.id_utenti),$scope.id_utenti_selezione=Session.id_utenti,$scope.utentiList=[],$scope.utentiList.push({id_utenti:Session.id_utenti,nome_breve_utenti:Session.nome_breve_utenti}))}),$scope.fetchResult=function(){console.log("TestController...fetchResult"),console.log($scope.filterCriteria);var serviziList=Restangular.all("serviziAll");console.log("TestController...fetchResult - count"),$scope.filterCriteria.count=1,serviziList.getList($scope.filterCriteria).then(function(data){console.log("COUNT: data[0].totalItems:"),console.log(data),$scope.totalItems=data.length>0?data[0].totalItems:0},function(){$scope.totalItems=0}),console.log("TestController...fetchResult - get data");var offset_page=($scope.currentPage-1)*$scope.pageSize;return $scope.filterCriteria.count=0,$scope.filterCriteria.start=offset_page,serviziList.getList($scope.filterCriteria).then(function(data){console.log(data),$scope.items=data},function(){$scope.items=[]})},$scope.selectPage=function(){var page=$scope.currentPage;console.log("Page changed to: "+$scope.currentPage),console.log("TestController...selectPage:"+page),$scope.currentPage=page,$scope.filterCriteria.pageNumber=page,$scope.fetchResult()},$scope.selectPage(1),$scope.$watch("id_utenti_selezione",function(newValue,oldValue){console.log("id_utenti changed! New "+newValue+" Old "+oldValue),Session.isAdmin?($scope.filterCriteria.id_utenti_selezione=newValue,$scope.currentPage=1,$scope.filterCriteria.pageNumber=$scope.currentPage,$scope.fetchResult()):console.log("id_utenti changed! New NO ADMIN NO ACTION")}),$scope.$watch("data_servizi_selezione",function(newValue,oldValue){console.log("data_servizi changed!"+newValue+" "+oldValue),newValue?(console.log($filter("date")(newValue,"MM")),console.log($filter("date")(newValue,"yyyy")),$scope.filterCriteria.mese_selezione=$filter("date")(newValue,"MM"),$scope.filterCriteria.anno_selezione=$filter("date")(newValue,"yyyy")):($scope.filterCriteria.mese_selezione=0,$scope.filterCriteria.anno_selezione=0),$scope.currentPage=1,$scope.filterCriteria.pageNumber=$scope.currentPage,$scope.fetchResult()}),$scope.popupDate=function($event){console.log("popupDate"),$event.preventDefault(),$event.stopPropagation(),$scope.openedPopupDate=$scope.openedPopupDate?!1:!0},$scope.editItem=function(itemId){console.log("editItem"),$location.path("/edit/"+itemId)},$scope.viewItem=function(itemId){console.log("viewItem"),$location.path("/view/"+itemId)},$scope.items=["item1","item2","item3"];var ModalInstanceCtrl=function($scope,$modalInstance,items){$scope.items=items,$scope.selected={item:$scope.items[0]},$scope.ok=function(){$modalInstance.close($scope.selected.item)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}};$scope.open=function(size){var modalInstance=$modal.open({templateUrl:"myModalContent.html",controller:ModalInstanceCtrl,size:size,resolve:{items:function(){return $scope.items}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){console.log("Modal dismissed at: "+new Date)})}}]);
"use strict";angular.module("myApp.filters",[]).filter("interpolate",["version",function(version){return function(text){return String(text).replace(/\%VERSION\%/gm,version)}}]).filter("asDate",function(){return function(input){return console.log("FILTER:asDate:"+input),new Date(input)}}).filter("datetmUTC",function($filter){return function(input){if(null==input)return"";console.log("FILTER:datetmUTC:"+input);var _date=$filter("date")(new Date(input),"MMM dd yyyy - HH:mm:ss");console.log("FILTER:datetmUTC:"+_date);var _now=new Date(_date);return console.log("FILTER:datetmUTC:"+_now),console.log("FILTER:datetmUTC:"+_now.getTime()),_now.getTime()}});
"use strict";angular.module("myApp.directives",[]).directive("appVersion",["version",function(version){return function(scope,elm){elm.text(version)}}]).directive("browserVersion",["version",function(){return function(){var agentStr=navigator.userAgent;this.IsIE=!1,this.IsOn=void 0,this.Version=void 0,agentStr.indexOf("MSIE 7.0")>-1&&(this.IsIE=!0,this.IsOn=!0,agentStr.indexOf("Trident/6.0")>-1?this.Version="IE10":agentStr.indexOf("Trident/5.0")>-1?this.Version="IE9":agentStr.indexOf("Trident/4.0")>-1?this.Version="IE8":(this.IsOn=!1,this.Version="IE7"))}}]).directive("fancySelect",["$ionicModal",function($ionicModal){return{restrict:"E",templateUrl:"partials/fancy-select.html",scope:{items:"=",text:"=",value:"=",callback:"&"},link:function(scope,element,attrs){scope.multiSelect="true"===attrs.multiSelect?!0:!1,scope.allowEmpty="false"===attrs.allowEmpty?!1:!0,scope.headerText=attrs.headerText||"",scope.labelText=attrs.labelText||"",scope.defaultText=scope.text||"",scope.noteText=attrs.noteText||"",scope.noteImg=attrs.noteImg||"",scope.noteImgClass=attrs.noteImgClass||"",$ionicModal.fromTemplateUrl("partials/fancy-select-items.html",{scope:scope}).then(function(modal){scope.modal=modal}),scope.validate=function(){1==scope.multiSelect&&(scope.value="",scope.text="",jQuery.each(scope.items,function(index,item){item.checked&&(scope.value=scope.value+item.id+",",scope.text=scope.text+"\r"+item.text+", ")}),scope.value=scope.value.substr(0,scope.value.length-1),scope.text=scope.text.substr(0,scope.text.length-2),console.log("#DIRECTIVE#Fancy#value:"+scope.value),console.log("#DIRECTIVE#Fancy#text:"+scope.text)),("undefined"==typeof scope.value||""==scope.value||null==scope.value)&&(0==scope.allowEmpty?(scope.value=scope.items[0].id,scope.text=scope.items[0].text,scope.items[0].checked=!0):scope.text=scope.defaultText),scope.hideItems(),"function"==typeof scope.callback&&scope.callback(scope.value)},scope.showItems=function(event){event.preventDefault(),scope.modal.show()},scope.hideItems=function(){scope.modal.hide()},scope.$on("$destroy",function(){scope.modal.remove()}),scope.validateSingle=function(item){scope.text=item.text,scope.value=item.id,scope.hideItems(),"function"==typeof scope.callback&&scope.callback(scope.value)}}}}]);